<%- include("./layout/header.ejs"); %>
    <v-main>
        <v-container>
            <v-btn v-if="info.role.toLowerCase() == 'chef'" color="primary" @click="edit_coefficient_form();add_coeff = true" class="mt-2" outlined>
                <v-icon color="primary">
                    mdi-plus
                </v-icon>
                ADD
            </v-btn>
            <v-card class="mx-auto mt-5">
                <v-list class="pa-0">
                    <v-list-item-group color="indigo">
                        <v-list-item v-for="(subject, i) in subjects" :key="i"
                            @click="edit_coefficient_form(subject.name,subject.coeff)">
                            <v-list-item-title>
                                <h3>{{ subject.name }}</h3>
                            </v-list-item-title>
                            <v-list-item-action>
                                {{ subject.coeff }}
                            </v-list-item-action>
                        </v-list-item>
                    </v-list-item-group>
                </v-list>
            </v-card>
        </v-container>
        <v-dialog width="600" v-if="edit_coeff || add_coeff" v-model="edit_coeff">
            <v-card style="overflow: hidden !important;" width="600" class="pa-5">
                <v-list class="my-2 pa-0">
                    <h3>COEFFICIENT</h3><br>
                    <v-row>
                        <v-col cols="6">
                            <v-text-field v-model="new_coeff.subject" :rules="requireField" label="SUBJECT"
                                class="pa-0" background-color="white" hide-details :disabled="!add_coeff" outlined required>
                            </v-text-field>
                        </v-col>
                        <v-col cols="6">
                            <v-text-field v-model="new_coeff.coefficient" :rules="requireField" label="COEFFICIENT"
                                class="pa-0" background-color="white" hide-details outlined required>
                            </v-text-field>
                        </v-col>

                    </v-row>

                </v-list>
                <v-btn v-if="add_coeff" :loading="linkloading" class="mt-2 pa-5 white--text" color="blue" @click="add_coefficient()"
                    large widht="100%">
                    <v-icon left>
                        mdi-plus
                    </v-icon>
                    ADD
                </v-btn>
                <div v-else>
                    <v-btn :loading="linkloading" class="mt-2 pa-5 white--text" color="green" @click="edit_coefficient()"
                        large widht="100%">
                        <v-icon left>
                            mdi-pen
                        </v-icon>
                        EDIT
                    </v-btn>
                    <v-btn :loading="linkloading" class="mt-2 pa-5 white--text" color="red" @click="delete_coefficient_form = true"
                        large widht="100%">
                        <v-icon left>
                            mdi-minus
                        </v-icon>
                        DELETE
                    </v-btn>
                </div>
            </v-card>
        </v-dialog>
        <v-dialog width="400" v-model="delete_coefficient_form">
            <v-card style="overflow: hidden !important;" width="400" height="150">
                <div class="text-caption text-center pt-6 red--text" style="font-size: 16px !important; ">Are you
                    sure you want to delete this coefficient
                </div>
                <v-card-text>
                    <v-row class="mt-5" justify="center">
                        <v-spacer></v-spacer>
                        <v-tooltip bottom>
                            <template v-slot:activator="{ on, attrs }">
                                <v-btn @click="delete_coefficient" :loading="linkloading" v-on="on" v-bind="attrs"
                                    outlined icon large color="red">
                                    <v-icon color="red">mdi-check</v-icon>
                                </v-btn>

                            </template>
                            <span>Are you sure!</span>
                        </v-tooltip>
                        <v-spacer></v-spacer>
                        <v-tooltip bottom>
                            <template v-slot:activator="{ on, attrs }">
                                <v-btn @click="delete_coefficient_form = false" v-on="on" v-bind="attrs" outlined icon
                                    large color="green">
                                    <v-icon color="green">mdi-close</v-icon>
                                </v-btn>

                            </template>
                            <span>Cancel</span>
                        </v-tooltip>
                        <v-spacer></v-spacer>
                    </v-row>
                </v-card-text>
            </v-card>
        </v-dialog>
        <v-snackbar :value="snackbar" :color="color">
            {{ message }}
            <template v-slot:action="{ attrs }">
                <v-btn color="white" text v-bind="attrs" @click="snackbar = false">
                    Close
                </v-btn>
            </template>
        </v-snackbar>
    </v-main>
    <v-footer padless>
        <v-col class="text-center" cols="12">
            {{ new Date().getFullYear() }} â€” <strong>By YH - SB</strong>
        </v-col>
    </v-footer>
    </v-app>

    <script>
        // import CardInfo from "components/CardInfo"
        // var CardInfo = require("./components/CardInfo")
        var vm = new Vue({
            el: '#app',
            vuetify: new Vuetify(),
            data: {
                page_name: "MODULES",
                logged: false,
                edit_coeff: false,
                snackbar: false,
                drawered: true,
                add_coeff:false,
                linkloading:false,
                delete_coefficient_form:false,
                message: "",
                color: "success",
                info: {},
                items: [],
                subjects: [],
                new_coeff: {},
                requireField: [
                    (v) => !!v || 'field is required',
                ],
            },
            computed: {
                styleColor() {
                    return 'background-image: linear-gradient(270deg,#' + this.secondColor + ' ,#' + this.firstColor + ')';
                }

            },
            methods: {
                goto(url) {
                    window.location.href = url
                },
                logout() {
                    localStorage.removeItem("token");
                    window.location.href = '/login'
                },
                edit_coefficient_form(subject, coeff) {
                    if(this.info.role.toLowerCase() == 'chef'){
                        this.snackbar = false
                        this.add_coeff = false
                        this.new_coeff = {
                            subject: subject,
                            old:coeff,
                            coefficient: coeff
                        }
                        this.edit_coeff = true
                    }
                    
                },
                edit_coefficient(){
                    this.linkloading = true
                    axios.put("/api/subject", this.new_coeff).then((res) => {
                        this.linkloading = false
                        if (res.data.ok == 1) {
                            axios.get('/api/subject/-1').then((response) => {
                                if (response.data != "") {
                                    this.subjects = []
                                    this.color = "success"
                                    this.message = res.data.response
                                    this.snackbar = true
                                    response.data[0].forEach((value, index) => {
                                        this.subjects.push({
                                            "name": Object.keys(value)[0],
                                            "coeff": value[Object.keys(value)[0]]
                                        })
                                    })
                                }
                            }).catch(
                                err => {
                                    this.errors = err.response.data.errors
                                    console.log(this.errors)
                                }
                            )
                            this.edit_coeff = false
                        } else {
                            this.color = "error"
                            this.message = res.data.response
                            this.snackbar = true
                        }
                    }).catch((err) => {

                    })
                },
                add_coefficient() {
                    this.linkloading = true
                    axios.post("/api/subject", this.new_coeff).then((res) => {
                        this.linkloading = false
                        if (res.data.ok == 1) {
                            axios.get('/api/subject/-1').then((response) => {
                                if (response.data != "") {
                                    this.subjects = []
                                    this.color = "success"
                                    this.message = res.data.response
                                    this.snackbar = true
                                    response.data[0].forEach((value, index) => {
                                        this.subjects.push({
                                            "name": Object.keys(value)[0],
                                            "coeff": value[Object.keys(value)[0]]
                                        })
                                    })
                                }
                            }).catch(
                                err => {
                                    this.errors = err.response.data.errors
                                    console.log(this.errors)
                                }
                            )
                            this.edit_coeff = false
                        } else {
                            this.color = "error"
                            this.message = res.data.response
                            this.snackbar = true
                        }
                    }).catch((err) => {

                    })
                },
                delete_coefficient(){
                    this.linkloading = true
                    console.log(this.new_coeff)
                    axios.delete("/api/subject", { data: this.new_coeff }).then((res) => {
                        this.delete_coefficient_form = false
                        this.linkloading = false
                        if (res.data.ok == 1) {
                            axios.get('/api/subject/-1').then((response) => {
                                if (response.data != "") {
                                    this.subjects = []
                                    this.color = "success"
                                    this.message = res.data.response
                                    this.snackbar = true
                                    response.data[0].forEach((value, index) => {
                                        this.subjects.push({
                                            "name": Object.keys(value)[0],
                                            "coeff": value[Object.keys(value)[0]]
                                        })
                                    })
                                }
                            }).catch(
                                err => {
                                    this.errors = err.response.data.errors
                                    console.log(this.errors)
                                }
                            )
                            this.edit_coeff = false
                        } else {
                            this.color = "error"
                            this.message = res.data.response
                            this.snackbar = true
                        }
                    }).catch((err) => {

                    })
                }
            },
            created() {
                if (localStorage.getItem("token") === null) {
                    window.location.href = '/login'
                } else {
                    axios.defaults.headers.post['x-access-token'] = localStorage.getItem("token")
                    axios.defaults.headers.common['x-access-token'] = localStorage.getItem("token")
                    axios.get('/api/user/me').then((res) => {
                        // console.log(res.data)
                        this.info = res.data
                        this.logged = true
                        this.items.push(
                            { title: 'Dashboard', icon: 'mdi-view-dashboard', url: "/", selected: false },
                            { title: 'Account', icon: 'mdi-badge-account-horizontal-outline', url: "/profile", selected: false },
                            { title: 'Modules', icon: 'mdi-calculator', url: "/modules", selected: true },
                        )
                        if (res.data.role.toLowerCase() == "chef") {
                            this.items.push(
                                { title: 'Users', icon: 'mdi-account-supervisor-outline', url: "/users", selected: false },
                                { title: 'Members', icon: 'mdi-account-group-outline', url: "/members", selected: false },
                                { title: 'PV', icon: 'mdi-clipboard-text-multiple-outline', url: "/pv", selected: false },
                            )
                        }
                        if (res.data.user_refere != -1) {
                            this.items.push(
                                { title: 'Complaints', icon: 'mdi-alert-circle', url: "/complaints" },
                                { title: 'Marks', icon: 'mdi-format-text-variant-outline', url: "/marks", selected: false }
                            )
                        }
                        axios.get('/api/subject/-1').then((response) => {
                            if (response.data != "") {
                                this.subject = []

                                response.data[0].forEach((value, index) => {
                                    this.subjects.push({
                                        "name": Object.keys(value)[0],
                                        "coeff": value[Object.keys(value)[0]]
                                    })
                                })
                            }

                        }).catch(
                            err => {
                                this.errors = err.response.data.errors
                                console.log(this.errors)
                            }
                        )
                    }).catch(
                        err => {
                            this.errors = err.response.data.errors
                            console.log(this.errors)
                        }
                    )


                }
            },

        })
    </script>

    <%- include("./layout/footer.ejs") %>